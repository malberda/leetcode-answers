
int value(char symbol, char*Symbols, int*Values);
int comesbefore(char first, char second, char*symbols, int*values);

int romanToInt(char * s){
    
    char Symbols[7]={'I','V','X','L','C','D','M'};
    int Values[7]={1,5,10,50,100,500,1000};
    //basic setup
    int length;
    length=strlen(s);
    int i;
    int total;
    total=0;                        //add up similar values and values smaller than previous values, otherwise subtract
                            //them from the total
    for(i=0;i<length-1;i++)
    {
        printf("%d %d\n",total, comesbefore(s[i],s[i+1],Symbols,Values));
        if(comesbefore(s[i],s[i+1],Symbols,Values)==+1)
        {
            total-=value(s[i],Symbols,Values);
        }
        else
            total+=value(s[i],Symbols,Values);
    }
    total+=value(s[length-1],Symbols,Values);
    
    
    return total;
}


int value(char symbol, char*Symbols, int*Values)
{
    int i;
    for(i=0;i<7;i++)
    {
        if(symbol==Symbols[i])
            return Values[i];
    }
    return 0;
}


int comesbefore(char first, char second, char*symbols, int*values)
{
    int i;
    int index1, index2;
    for(i=0;i<7;i++)
    {
        if(first==symbols[i])
        {
            index1=i;
        }
        if(second==symbols[i])
        {
            index2=i;
        }
    }
    
    if(index1<index2)
        return 1;               //first value passed in is smaller value
    else if(index1>index2)
        return -1;              //second value passed in is the smaller value
    else
        return 0;               //same
    
    
}
